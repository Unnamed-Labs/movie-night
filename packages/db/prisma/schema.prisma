generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Movie {
  id          String   @id @default(cuid())
  title       String
  description String
  runtime     String
  score       Float
  location    String
  date        String
  imageSrc    String
  imageAlt    String
  genres      Genre[]
  rating      Rating   @relation(fields: [ratingId], references: [id])
  ratingId    String
  lobbies     Lobby[]
  createdDate DateTime @default(now())
}

model Genre {
  id     String  @id @default(cuid())
  name   String
  movies Movie[]
}

model Rating {
  id     String  @id @default(cuid())
  name   String  @unique
  movies Movie[]
}

model Lobby {
  id           String   @id @default(cuid())
  code         String   @unique()
  amount       Int      @default(8)
  isActive     Boolean
  movie        Movie?   @relation(fields: [movieId], references: [id])
  movieId      String?
  createdDate  DateTime @default(now())
  updatedDate  DateTime @default(now())
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model RoomCode {
  id          String   @id @default(cuid())
  code        String   @unique
  isActive    Boolean
  createdDate DateTime @default(now())
  updatedDate DateTime @default(now())
  version     Int      @default(0)
}
